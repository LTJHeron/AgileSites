<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:assetBean xmlns:ns2="http://www.fatwire.com/schema/rest/1.0">
    <id>Page:1351275793125</id>
    <name>NoJSP</name>
    <createdby>fwadmin</createdby>
    <createddate>2013-03-11T06:14:08.708Z</createddate>
    <description></description>
    <publist>AgileSites</publist>
    <status>PL</status>
    <subtype>Content</subtype>
    <updatedby>fwadmin</updatedby>
    <updateddate>2013-03-11T06:14:19.955Z</updateddate>
    <attribute>
        <name>startdate</name>
        <data/>
    </attribute>
    <attribute>
        <name>enddate</name>
        <data/>
    </attribute>
    <attribute>
        <name>filename</name>
        <data>
            <stringValue></stringValue>
        </data>
    </attribute>
    <attribute>
        <name>path</name>
        <data>
            <stringValue></stringValue>
        </data>
    </attribute>
    <attribute>
        <name>template</name>
        <data>
            <stringValue></stringValue>
        </data>
    </attribute>
    <attribute>
        <name>urlexternaldoc</name>
        <data/>
    </attribute>
    <attribute>
        <name>externaldoctype</name>
        <data>
            <stringValue></stringValue>
        </data>
    </attribute>
    <attribute>
        <name>urlexternaldocxml</name>
        <data/>
    </attribute>
    <attribute>
        <name>fw_uid</name>
        <data>
            <stringValue>b70aa944-1e09-41d2-a164-c9efff3df937</stringValue>
        </data>
    </attribute>
    <attribute>
        <name>id</name>
        <data>
            <longValue>1351275793125</longValue>
        </data>
    </attribute>
    <attribute>
        <name>SegRating</name>
        <data/>
    </attribute>
    <attribute>
        <name>fwtags</name>
        <data/>
    </attribute>
    <attribute>
        <name>category</name>
        <data>
            <stringValue></stringValue>
        </data>
    </attribute>
    <attribute>
        <name>SPTParent</name>
        <data>
            <stringValue>Page:1351275793075</stringValue>
        </data>
    </attribute>
    <attribute>
        <name>SPTRank</name>
        <data>
            <integerValue>2</integerValue>
        </data>
    </attribute>
    <attribute>
        <name>SPTNCode</name>
        <data>
            <stringValue>Placed</stringValue>
        </data>
    </attribute>
    <attribute>
        <name>flextemplateid</name>
        <data>
            <stringValue>PageDefinition:1351275793059</stringValue>
        </data>
    </attribute>
    <attribute>
        <name>Title</name>
        <data>
            <stringValue>Avoid unreadable JSP</stringValue>
        </data>
    </attribute>
    <attribute>
        <name>Author</name>
        <data>
            <stringValue>Michele Sciabarra</stringValue>
        </data>
    </attribute>
    <attribute>
        <name>Image</name>
        <data/>
    </attribute>
    <attribute>
        <name>Summary</name>
        <data>
            <stringValue>&lt;div&gt;
	coding all your logic in plain Java (or Scala) and keeping views in simple HTML ?&lt;/div&gt;
</stringValue>
        </data>
    </attribute>
    <attribute>
        <name>Text</name>
        <data>
            <stringValue>&lt;div&gt;
	&lt;h2 style="margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 1px; border-left-width: 0px; border-style: initial; border-color: initial; font-weight: bold; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 24px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); color: rgb(0, 0, 0); "&gt;
		Problem&lt;/h2&gt;
	&lt;p style="margin-top: 0px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		WCS/Fatwire require developers implement templates either using JSP or its proprietary XML based language.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		JSP are great for implementing simple rendering logic, and they dynamic, since they are recompiled on the fly. Developers enjoy instant gratifications seeing immediately the results of their efforts.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		With those advantages comes many disadvantages. The problem with JSP is that they are really meant to implement&amp;nbsp;&lt;strong style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; font-weight: bold; "&gt;simple&lt;/strong&gt;&amp;nbsp;rendering logic&lt;em style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; font-style: italic; "&gt;ONLY&lt;/em&gt;. A normal Java Web Applications uses also servlet as controllers, and very often MVC frameworks like Struts or Spring MVC to better organize the code.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		In WCS/Fatwire unfortunately JSP is the only mean to develop code, unless you write an extensions jar to add to the webapp, then you deploy it and restart the application server.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		Since restarting the application server is slow, most developers end up writing complex logic directly in the JSP, writing JSP that are almost all comprised of Java code. This practice has many shortcomings.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		First, JSP cannot share code. You cannot define for example an utility method in a JSP and call it in another jsp.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		You can use a JSP in Fatwire/WCS as a CSElement and call it from another JSP, but they are very cumbersome to use.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		Alternatively, you can write your code in a Java class, deploy it in a separate jar, then restart the application server before using it. This is very cumbersome in the development process.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		Second, the syntax of JSP is frankly ugly and unreadable. Indentation is very difficult, and often you cannot indent at all to avoid generating tons unindented HTML (that must required to be readable too).&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		Third, Fatwire/WCS is complicating things because the API can often be invoked only through the tag, so you end up switching from java to html and back only to call an API through a tag.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		Many projects end up with a lot of Java code inside a JSP, with a lot of code copied and pasted between JSP, getting a large, unmanageable amount of spaghetti code with lot of repetitions.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		This is not entirely a Fatwire/WCS fault but definitely the limitations of JSP encourage those bad practices.&lt;/p&gt;
	&lt;h2 style="margin-top: 20px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 1px; border-left-width: 0px; border-style: initial; border-color: initial; font-weight: bold; -webkit-font-smoothing: antialiased; cursor: text; position: relative; font-size: 24px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); color: rgb(0, 0, 0); "&gt;
		Solution&lt;/h2&gt;
	&lt;p style="margin-top: 0px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		The fundamental feature of this framework is allowing developers to write templates directly in Java, and providing APIs to render the view from an unchanged HTML (the typical HTML that you receive from web designers).&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		Since accessing to the content model in Fatwire/WCS is usually done using JSP tags, a specific API has been developed to provide easy invocation of JSP tags directly in Java.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		To keep the Agility of development using JSP, all your code is stored in a jar that is dinamically redeployed when you change it, so there is no need to restart the application server. You keep the instant gratification of JSP, but you can write ordered, clean Java code, splitting it in multiple classes and reusing code without limite call-elements.&lt;/p&gt;
	&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 0px !important; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; "&gt;
		You have all the Java power at your finger tips. However, templates are still templates, and they are invoked by a JSP. The stub code to generate the JSP is managed automatically by the framework so you don&amp;#39;t have to worry of it.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
	&amp;nbsp;&lt;/div&gt;
</stringValue>
        </data>
    </attribute>
    <associations>
        <href>myPathassociations</href>
    </associations>
</ns2:assetBean>

<!--==================___ METADATA ___================
<dependencies>
  <list>
    <dependency>
      <depType>E</depType>
      <resType>PageAttribute</resType>
      <resId>1351275793011</resId>
      <uid>fed17132-a085-4c55-aa54-9d9c6aa05ce9</uid>
    </dependency>
    <dependency>
      <depType>E</depType>
      <resType>PageAttribute</resType>
      <resId>1351275793017</resId>
      <uid>8beeb3b7-0e5f-42eb-9eee-c68d0ef90d0e</uid>
    </dependency>
    <dependency>
      <depType>E</depType>
      <resType>PageAttribute</resType>
      <resId>1351275793023</resId>
      <uid>849c03c8-4bd8-4199-8f2e-efa1eea41cdf</uid>
    </dependency>
    <dependency>
      <depType>E</depType>
      <resType>PageAttribute</resType>
      <resId>1351275793030</resId>
      <uid>59663f74-a8fa-4fdc-87ca-3320108995df</uid>
    </dependency>
    <dependency>
      <depType>E</depType>
      <resType>PageDefinition</resType>
      <resId>1351275793059</resId>
      <uid>259cb2da-ec5f-4014-871f-5b8b848ef0f4</uid>
    </dependency>
    <dependency>
      <depType>N</depType>
      <resType>Page</resType>
      <resId>1351275793125</resId>
      <uid>b70aa944-1e09-41d2-a164-c9efff3df937</uid>
    </dependency>
    <dependency>
      <depType>N</depType>
      <resType>Page</resType>
      <resId>1351275793075</resId>
      <uid>6d0d5d3b-56ec-434a-af90-7a75cdc42225</uid>
    </dependency>
  </list>
</dependencies>
==================______________________==================
#
#Mon Mar 11 06:24:13 UTC 2013
key=Page-b70aa944-1e09-41d2-a164-c9efff3df937
type=ASSETDATA
sites=AgileSites

==================___ END METADATA ___==================-->
